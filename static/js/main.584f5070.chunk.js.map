{"version":3,"sources":["utils/heap.js","utils/huffman.js","utils/notification.js","utils/ErrorBoundary.js","Zipper/Zipper.js","App.js","index.js"],"names":["BinaryHeap","this","heap","value","push","bubbleUp","length","size","index","element","parentIndex","Math","floor","parent","max","tmp","pop","empty","sinkDown","left","right","largest","HuffmanCoder","node","stringify","modify","String","display","res","data","ind","destringify","path","getMappings","mappings","mp","Map","i","key","insert","node1","extractMax","node2","huffman_encoder","binary_string","rem","padding","result","num","j","fromCharCode","final_res","info","split","huffman_decoder","text","charCodeAt","bin","substring","console","log","NotificationContext","React","createContext","fadeIn","keyframes","fadeOut","Background","styled","div","SingleNotification","props","color","Bar","width","Single","useState","exit","setExit","setWidth","interval","useRef","dispatch","useContext","set","current","setInterval","clear","clearInterval","useEffect","setTimeout","type","payload","noti","onMouseEnter","e","onMouseLeave","className","msg","Notification","useReducer","state","actions","concat","filter","s","id","Provider","map","notification","children","ErrorBoundary","hasError","error","errorInfo","Component","coder","huff","Heading","h1","ButtonWrapper","Button","button","DragArea","TreeDisplay","Zipper","isFileUploaded","setIsFileUploaded","tree","x","y","xy","setXy","ipRef","opRef","nofificationDispatch","drawCircles","clientX","clientY","downloadFile","fileName","a","document","createElement","href","encodeURIComponent","download","click","internal","onChange","event","v4","target","files","ref","onMouseMove","onClick","reader","FileReader","onload","check","encode","encoded","tree_structure","name","innerText","alert","readAsText","fileReader","fileLoadedEvent","decode","decoded","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.584f5070.chunk.js","sourcesContent":["/**\n * Created by aarnavjindal on 30/03/20.\n */\n\n\nclass BinaryHeap {\n\n    constructor() {\n        this.heap = [];\n    }\n\n    insert(value) {\n        this.heap.push(value);\n        this.bubbleUp();\n    }\n\n    size() {\n        return this.heap.length;\n    }\n\n    empty() {\n        return (this.size() === 0);\n    }\n\n    //using iterative approach\n    bubbleUp() {\n        let index = this.size() - 1;\n\n        while (index > 0) {\n            let element = this.heap[index],\n                parentIndex = Math.floor((index - 1) / 2),\n                parent = this.heap[parentIndex];\n\n            if (parent[0] >= element[0]) break;\n            this.heap[index] = parent;\n            this.heap[parentIndex] = element;\n            index = parentIndex\n        }\n    }\n\n    extractMax() {\n        const max = this.heap[0];\n        const tmp = this.heap.pop();\n        if (!this.empty()) {\n            this.heap[0] = tmp;\n            this.sinkDown(0);\n        }\n        return max;\n    }\n\n    sinkDown(index) {\n\n        let left = 2 * index + 1,\n            right = 2 * index + 2,\n            largest = index;\n        const length = this.size();\n\n        // console.log(this.heap[left], left, length, this.heap[right], right, length, this.heap[largest]);\n\n        if (left < length && this.heap[left][0] > this.heap[largest][0]) {\n            largest = left\n        }\n        if (right < length && this.heap[right][0] > this.heap[largest][0]) {\n            largest = right\n        }\n        // swap\n        if (largest !== index) {\n            let tmp = this.heap[largest];\n            this.heap[largest] = this.heap[index];\n            this.heap[index] = tmp;\n            this.sinkDown(largest)\n        }\n    }\n}\nexport default BinaryHeap;","\n\nimport BinaryHeap from './heap';\n\n\nclass HuffmanCoder {\n\n    stringify(node) {\n        if (typeof (node[1]) === \"string\") {\n            return '\\'' + node[1];\n        }\n\n        return '0' + this.stringify(node[1][0]) + '1' + this.stringify(node[1][1]);\n    }\n\n    display(node, modify, index = 1) {\n        if (modify) {\n            node = ['', node];\n            if (node[1].length === 1)\n                node[1] = node[1][0];\n        }\n\n        if (typeof (node[1]) === \"string\") {\n            return String(index) + \" = \" + node[1];\n        }\n\n        let left = this.display(node[1][0], modify, index * 2);\n        let right = this.display(node[1][1], modify, index * 2 + 1);\n        let res = String(index * 2) + \" <= \" + index + \" => \" + String(index * 2 + 1);\n        return res + '\\n' + left + '\\n' + right;\n    }\n\n    destringify(data) {\n        let node = [];\n        if (data[this.ind] === '\\'') {\n            this.ind++;\n            node.push(data[this.ind]);\n            this.ind++;\n            return node;\n        }\n\n        this.ind++;\n        let left = this.destringify(data);\n        node.push(left);\n        this.ind++;\n        let right = this.destringify(data);\n        node.push(right);\n\n        return node;\n    }\n\n    getMappings(node, path) {\n        if (typeof (node[1]) === \"string\") {\n            this.mappings[node[1]] = path;\n            return;\n        }\n\n        this.getMappings(node[1][0], path + \"0\");\n        this.getMappings(node[1][1], path + \"1\");\n    }\n\n    encode(data) {\n\n        this.heap = new BinaryHeap();\n\n        const mp = new Map();\n        for (let i = 0; i < data.length; i++) {\n            if (data[i] in mp) {\n                mp[data[i]] = mp[data[i]] + 1;\n            } else {\n                mp[data[i]] = 1;\n            }\n        }\n\n        for (const key in mp) {\n            this.heap.insert([-mp[key], key]);\n        }\n\n        while (this.heap.size() > 1) {\n            const node1 = this.heap.extractMax();\n            const node2 = this.heap.extractMax();\n\n            const node = [node1[0] + node2[0], [node1, node2]];\n            this.heap.insert(node);\n        }\n        const huffman_encoder = this.heap.extractMax();\n\n        this.mappings = {};\n        this.getMappings(huffman_encoder, \"\");\n\n        let binary_string = \"\";\n        for (let i = 0; i < data.length; i++) {\n            binary_string = binary_string + this.mappings[data[i]];\n        }\n\n        let rem = (8 - binary_string.length % 8) % 8;\n        let padding = \"\";\n        for (let i = 0; i < rem; i++)\n            padding = padding + \"0\";\n        binary_string = binary_string + padding;\n\n        let result = \"\";\n        for (let i = 0; i < binary_string.length; i += 8) {\n            let num = 0;\n            for (let j = 0; j < 8; j++) {\n                num = num * 2 + (binary_string[i + j] - \"0\");\n            }\n            result = result + String.fromCharCode(num);\n        }\n\n        let final_res = this.stringify(huffman_encoder) + '\\n' + rem + '\\n' + result;\n        let info = \"Compression Ratio : \" + data.length / final_res.length;\n        info = \"Compression complete and file sent for download\" + '\\n' + info;\n        return [final_res, this.display(huffman_encoder, false), info];\n    }\n\n    decode(data) {\n        data = data.split('\\n');\n        if (data.length === 4) {\n            // Handling new line\n            data[0] = data[0] + '\\n' + data[1];\n            data[1] = data[2];\n            data[2] = data[3];\n            data.pop();\n        }\n\n        this.ind = 0;\n        const huffman_decoder = this.destringify(data[0]);\n        const text = data[2];\n\n        let binary_string = \"\";\n        for (let i = 0; i < text.length; i++) {\n            let num = text[i].charCodeAt(0);\n            let bin = \"\";\n            for (let j = 0; j < 8; j++) {\n                bin = num % 2 + bin;\n                num = Math.floor(num / 2);\n            }\n            binary_string = binary_string + bin;\n        }\n        binary_string = binary_string.substring(0, binary_string.length - data[1]);\n\n        console.log(binary_string.length);\n\n        let res = \"\";\n        let node = huffman_decoder;\n        for (let i = 0; i < binary_string.length; i++) {\n            if (binary_string[i] === '0') {\n                node = node[0];\n            } else {\n                node = node[1];\n            }\n\n            if (typeof (node[0]) === \"string\") {\n                res += node[0];\n                node = huffman_decoder;\n            }\n        }\n        let info = \"Decompression complete and file sent for download\";\n        return [res, this.display(huffman_decoder, true), info];\n    }\n}\nexport default HuffmanCoder;","import React, { useReducer, useState, useEffect, useRef, useContext } from 'react'\nimport styled, { keyframes } from 'styled-components'\n\n\n\nexport const NotificationContext = React.createContext('d');\n\nconst fadeIn = keyframes`\n    from{\n        transform:translateX(150%);\n\n    }\n    to{\n        transform:translateX(0%);\n    }\n`\nconst fadeOut = keyframes`\n    from{\n        transform:translateX(0%);\n    }\n    to{\n        transform:translateX(150%);\n    }\n`\n\n\nconst Background = styled.div`\n    position:fixed;\n    right:0;\n    padding:10px;\n  \n`\nconst SingleNotification = styled.div`\n    z-index:100;\n    min-width:15vw;\n    text-align:center;\n    color:${props => props.color};\n    border-radius:20px;\n    padding:4px 8px;\n    box-shadow: 0 0 10px rgba(0,0,0,0.3);\n    padding-bottom:0px;\n    background-color:yellow;\n    overflow:hidden;\n    font-size:2rem;\n    margin:10px;\n    div{\n        background-color:${props => props.color};\n    }\n    &.fade-in{\n        animation:${fadeIn} 500ms ease;\n    }\n    &.fade-out{\n        animation:${fadeOut} 500ms ease;\n    }\n    @media (max-width:450px){\n        font-size:1.2rem;\n        padding:1px 4px;\n        \n    }\n`\nconst Bar = styled.div`\n    width:${props => props.width};\n    height:5px;\n`\n\n\nfunction Notification(props) {\n    const initialState = [{ id: '232', msg: 'hello!', type: 'red' }];\n    const reducer = (state, actions) => {\n        switch (actions.type) {\n            case 'ADD-NOTIFICATION':\n                return state.concat(actions.payload);\n            case 'REMOVE-NOTIFICATION':\n                return state.filter(s => s.id !== actions.payload.id)\n            default:\n                return state\n        }\n    }\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n\n\n    return (\n        <NotificationContext.Provider value={dispatch}>\n            <Background>\n                {state.map(notification => <Single key={notification.id} noti={notification}></Single>)}\n            </Background>\n            {props.children}\n        </NotificationContext.Provider>\n    )\n}\n\n\nfunction Single(props) {\n    const [exit, setExit] = useState(false);\n    const [width, setWidth] = useState(0);\n    const interval = useRef();\n    const dispatch = useContext(NotificationContext)\n    function set() {\n        interval.current = setInterval(() => {\n            setWidth(width => width + 2)\n        }, 80)\n    }\n    function clear() {\n        clearInterval(interval.current)\n    }\n    useEffect(() => {\n        set()\n        return () => clear();\n\n    }, [])\n    useEffect(() => {\n        if (width > 100) {\n            setExit(!exit)\n            setTimeout(() => {\n                dispatch({ type: 'REMOVE-NOTIFICATION', payload: props.noti })\n            }, 100)\n        }\n    }, [width])\n\n    function entered(e) {\n        clear();\n    }\n    function exited(e) {\n        set();\n    }\n\n    return (\n        <SingleNotification\n            onMouseEnter={entered}\n            onMouseLeave={exited}\n            className={exit ? 'fade-out' : 'fade-in'}\n            color={props.noti.type}>\n            <span>{props.noti.msg}</span>\n            <Bar width={width + '%'}></Bar>\n        </SingleNotification>\n    )\n}\n\n\n\n\n\nexport default Notification\n","import React, { Component } from 'react'\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        // You can also log the error to an error reporting service\n        console.log('eee')\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong.</h1>;\n        }\n\n        return this.props.children;\n    }\n}\nexport default ErrorBoundary;\n","import React, { useState, useRef, useEffect, useContext } from 'react'\nimport styled from 'styled-components'\nimport huff from '../utils/huffman'\nimport { NotificationContext } from '../utils/notification'\nimport { v4 } from 'uuid'\nimport ErrorBoundary from '../utils/ErrorBoundary'\nconst coder = new huff();\nconst Background = styled.div`\n    box-sizing: border-box;\n    padding-top:30px;\n    height:100vh;\n    width:100vw;\n    background-color:#2F2FA2;\n    text-align:center;\n    overflow-y:scroll;\n    overflow-x:hidden;\n    @media (max-width:450px){\n        padding-top:5px;\n    }\n`\nconst Heading = styled.h1`\n    height:4%;\n    color:white;\n`\n\n\nconst ButtonWrapper = styled.div`\n    width:100%;\n    height:5%;\n    display: flex;\n    justify-content: space-evenly;\n    margin-bottom:30px;\n    @media (max-width:450px){\n        margin-bottom:20px;\n    }\n`\n\nconst Button = styled.button`\n    position: relative;\n    background-color:inherit;\n    width:20%;\n    height:50px;\n    border:none;\n    outline:none;\n    font-size:1.7rem;\n    color:#F64C72;\n    border-radius:20px;\n    border:3px solid #F64C72;\n    z-index:0;\n    @media (max-width:450px){\n        font-size:1rem;\n        width:auto;\n    }\n\n    /* ::after{\n        content:'';\n        position:absolute;\n        top:30%;\n        width:100%;\n        height:100%;\n        background-color:black;\n    } */\n    \n`\n\nconst DragArea = styled.div`\n    position: relative;\n    width:100%;\n    height:calc(89% - 60px);\n    border-top:3px solid grey;\n    input{\n        color:#F64C72;\n        width:100%;\n        height:100%;\n        \n    }\n    span{\n        font-size:2rem;\n        color:#F64C72;\n        display:block;\n\n        text-align:center;\n        opacity:0.7;\n    }\n\n`\nconst TreeDisplay = styled.div`\n    padding:10px;\n    color:white;\n    font-size:1.3rem;\n    width:100%;\n    /* height:100%; */\n    /* overflow:scroll; */\n    box-sizing:border-box;\n    border-bottom:3px solid grey;\n`\n\nfunction Zipper() {\n    const [isFileUploaded, setIsFileUploaded] = useState(false);\n    let [tree, setTree] = useState('');\n    const [xy, setXy] = useState({ x: 0, y: 0 })\n    let ipRef = useRef();\n    let opRef = useRef();\n    let nofificationDispatch = useContext(NotificationContext)\n\n    function drawCircles(e) {\n        setXy(xy => ({ x: e.clientX, y: e.clientY }))\n    }\n    useEffect(() => {\n        console.log(xy.x, xy.y)\n    }, [xy])\n    function downloadFile(fileName, data) {\n        let a = document.createElement('a');\n        a.href = \"data:application/octet-stream,\" + encodeURIComponent(data);\n        a.download = fileName;\n        a.click();\n    }\n    let internal =\n        <>\n            <span>DRAG FILE HERE</span>\n            <input type='file' onChange={handleFileSubmit} />\n        </>\n    if (isFileUploaded) {\n        internal = <TreeDisplay ref={opRef}> {tree}</TreeDisplay>\n    }\n    function handleFileSubmit(event) {\n        nofificationDispatch(\n            {\n                type: 'ADD-NOTIFICATION',\n                payload: { msg: \"file uploaded successfully!\", type: 'green', id: v4() }\n            }\n        );\n        ipRef.current = event.target.files[0];\n    }\n    function check(text) {\n        for (let i = 0; i < text.length; i++) {\n            if (text[i] === '\\'') {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n    }\n    function handleEncode(event) {\n        setIsFileUploaded(true)\n        var reader = new FileReader();\n        reader.onload = function (event) {\n            let text = event.target.result;\n            if (text.length === 0) {\n                nofificationDispatch(\n                    {\n                        type: 'ADD-NOTIFICATION',\n                        payload: { msg: \"Text can not be empty ! Upload another file !\", type: 'red', id: v4() }\n                    }\n                );\n                return;\n            }\n            if (check(text)) {\n                let [encoded, tree_structure, info] = coder.encode(text);\n                downloadFile(ipRef.current.name.split('.')[0] + '_encoded.txt', encoded);\n                opRef.current.innerText = 'Huffman Tree : \\n' + tree_structure;\n                nofificationDispatch(\n                    {\n                        type: 'ADD-NOTIFICATION',\n                        payload: { msg: info, type: 'green', id: v4() }\n                    }\n                );\n            } else {\n                alert('invalid input')\n            }\n        };\n        reader.readAsText(ipRef.current, \"UTF-8\");\n    }\n    function handleDecode(event) {\n        // drawCircles();\n        setIsFileUploaded(true)\n        const fileReader = new FileReader();\n        fileReader.onload = function (fileLoadedEvent) {\n            const text = fileLoadedEvent.target.result;\n            if (text.length === 0) {\n                nofificationDispatch(\n                    {\n                        type: 'ADD-NOTIFICATION',\n                        payload: { msg: \"Text can not be empty ! Upload another file !\", type: 'red', id: v4() }\n                    }\n                );\n                console.log('Dispatched')\n                return;\n            }\n            let [decoded, tree_structure, info] = coder.decode(text);\n            downloadFile(ipRef.current.name.split('.')[0] + '_decoded.txt', decoded);\n            opRef.current.innerText = 'Huffman Tree : \\n' + tree_structure;\n            nofificationDispatch(\n                {\n                    type: 'ADD-NOTIFICATION',\n                    payload: { msg: info, type: 'green', id: v4() }\n                }\n            );\n\n        };\n        fileReader.readAsText(ipRef.current, \"UTF-8\");\n\n    }\n\n    return (\n        // <ErrorBoundary>\n        <Background>\n            <Heading>HUFFMAN CODER</Heading>\n            <ButtonWrapper>\n                <Button onMouseMove={drawCircles} onClick={handleEncode}>ENCODE</Button>\n                <Button onMouseMove={drawCircles} onClick={handleDecode}>DECODE</Button>\n            </ButtonWrapper>\n            <DragArea>\n                {internal}\n            </DragArea>\n        </Background>\n        // </ErrorBoundary>\n    )\n}\n\nexport default Zipper\n","import './App.css';\nimport Zipper from './Zipper/Zipper'\nimport ErrorBoundary from './utils/ErrorBoundary'\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <Zipper />\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Notifications from './utils/notification'\nimport ErrorH from './utils/ErrorBoundary'\nReactDOM.render(\n  <Notifications>\n    <App />\n  </Notifications>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}